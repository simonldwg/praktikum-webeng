package com.shopmeowmeow.presentation.servlets;

import com.shopmeowmeow.configuration.Configuration;
import com.shopmeowmeow.model.CatColor;
import com.shopmeowmeow.model.CatGender;
import com.shopmeowmeow.model.CatHairstyle;
import com.shopmeowmeow.model.OrderPaymentMethod;
import com.shopmeowmeow.persistence.CatDAO;
import com.shopmeowmeow.persistence.DAOFactory;
import com.shopmeowmeow.persistence.OrderDAO;
import com.shopmeowmeow.transfer.Cat;
import com.shopmeowmeow.transfer.Order;
import io.ebean.Database;
import io.ebean.DatabaseFactory;
import io.ebean.config.DatabaseConfig;
import io.ebean.datasource.DataSourceConfig;
import jakarta.servlet.ServletConfig;
import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;

import java.io.IOException;
import java.sql.*;
import java.time.LocalDate;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.Properties;

@WebServlet("/create-database")
public class CreateDatabase extends HttpServlet {

    private CatDAO catDAO;
    private OrderDAO orderDAO;


    @Override
    public void init(ServletConfig config) throws ServletException {
        // TODO Auto-generated method stub
        super.init(config);

        try {

            Connection conn = DriverManager.getConnection(Configuration.getUrl(), Configuration.getUsername(), Configuration.getPassword());

            Statement stmt = conn.createStatement();
            stmt.execute("drop table if exists Cats");
            stmt.execute("create table Cats (\n" +
                    "    ID BIGINT generated by default as identity not null,\n" +
                    "    name varchar(30) not null,\n" +
                    "    age integer not null,\n" +
                    "    color varchar(6),\n" +
                    "    hairstyle varchar(7),\n" +
                    "    price float not null,\n" +
                    "    description varchar(255),\n" +
                    "    gender varchar(6),\n" +
                    "    added_at date not null,\n" +
                    "    reserved boolean not null,\n" +
                    "    constraint ck_cats_color check ( color in ('White','Black','Orange','Brown','Blonde')),\n" +
                    "    constraint ck_cats_hairstyle check ( hairstyle in ('Long','Short','Weird','Normal','No hair')),\n" +
                    "    constraint ck_cats_gender check ( gender in ('Male','Female')),\n" +
                    "    constraint pk_cats primary key (ID)\n" +
                    ")");
            stmt.close();
            stmt = conn.createStatement();
            stmt.execute("drop table if exists Orders");
            stmt.execute("create table Orders (\n" +
                    "    ID BIGINT generated by default as identity not null,\n" +
                    "    firstname varchar(30) not null,\n" +
                    "    lastname varchar(30) not null,\n" +
                    "    address varchar(200) not null,\n" +
                    "    city varchar(200) not null,\n" +
                    "    zip varchar(30) not null,\n" +
                    "    cats varchar(1024) not null,\n" +
                    "    payment_method varchar(35) not null,\n" +
                    "    constraint pk_orders primary key (ID)\n" +
                    ")");
            stmt.close();
            conn.close();

        } catch (SQLException e) {
            System.err.println(e.getMessage());
            e.printStackTrace();
        }
        this.catDAO = DAOFactory.getCatDAO();
        this.orderDAO = DAOFactory.getOrderDAO();

        if (!catDAO.containsWithName("Leo")) {
            Cat leo = new Cat("Leo", "A beautiful Spanish cat with soft, golden fur.", 2, CatGender.FEMALE, CatColor.BLONDE, CatHairstyle.NORMAL, 143.95F);
            leo.setAddedAt(LocalDate.of(2014, Calendar.FEBRUARY, 11));
            catDAO.add(leo);
            Cat gerald = new Cat("Gerald", "A robust British grandpa with a good sense of humour.", 9, CatGender.MALE, CatColor.BLACK, CatHairstyle.LONG, 299.95F);
            gerald.setAddedAt(LocalDate.of(2022, Calendar.DECEMBER, 15));
            catDAO.add(gerald);
            Cat sarah = new Cat("Sarah", "A young, wild cat with an attitude.", 1, CatGender.FEMALE, CatColor.ORANGE, CatHairstyle.WEIRD, 12.95F);
            sarah.setAddedAt(LocalDate.of(2023, Calendar.JUNE, 20));
            catDAO.add(sarah);
            Cat doughnut = new Cat("Doughnut", "A poor, depressed but very cute cat in his midlife crisis.", 4, CatGender.MALE, CatColor.WHITE, CatHairstyle.SHORT, 179.95F);
            catDAO.add(doughnut);
            Order order1 = new Order("Hans","Hansewitz","Hansstra√üe 42","Hansstadt","37495", "Hansekatze1, Hansekatze2", OrderPaymentMethod.CREDIT_CARD);
            orderDAO.add(order1);
        }
    }


    /**
     * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
     */
    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        response.getWriter().println("-------------------------------------------------");
        response.getWriter().println("Alle Katzen:");
        response.getWriter().println("-------------------------------------------------");

        for (Cat c : catDAO.getAll()) {
            response.getWriter().println(c.getId());
            response.getWriter().println(c.getName());
            response.getWriter().println(c.getPrice());
            response.getWriter().println(c.getDescription());
            response.getWriter().println();
        }
        for (Order o : orderDAO.getAll()) {
            response.getWriter().println(o.getId());
            response.getWriter().println(o.getFirstname());
            response.getWriter().println();
        }
    }

    /**
     * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
     */
    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        // TODO Auto-generated method stub
        doGet(request, response);
    }

}